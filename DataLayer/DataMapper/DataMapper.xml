<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DataMapper</name>
    </assembly>
    <members>
        <member name="T:DataMapper.AuctionEnterpriseAppContext">
            <summary>
            Class AuctionEnterpriseAppContext.
            Implements the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.DbContext" />
        </member>
        <member name="M:DataMapper.AuctionEnterpriseAppContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:DataMapper.AuctionEnterpriseAppContext"/> class.
            </summary>
            <param name="options">The options for this context.</param>
        </member>
        <member name="P:DataMapper.AuctionEnterpriseAppContext.ApplicationSettings">
            <summary>
            Gets or sets the application settings.
            </summary>
            <value>The application settings.</value>
        </member>
        <member name="P:DataMapper.AuctionEnterpriseAppContext.Auctions">
            <summary>
            Gets or sets the auctions.
            </summary>
            <value>The auctions.</value>
        </member>
        <member name="P:DataMapper.AuctionEnterpriseAppContext.Bids">
            <summary>
            Gets or sets the bids.
            </summary>
            <value>The bids.</value>
        </member>
        <member name="P:DataMapper.AuctionEnterpriseAppContext.Categories">
            <summary>
            Gets or sets the categories.
            </summary>
            <value>The categories.</value>
        </member>
        <member name="P:DataMapper.AuctionEnterpriseAppContext.Products">
            <summary>
            Gets or sets the products.
            </summary>
            <value>The products.</value>
        </member>
        <member name="P:DataMapper.AuctionEnterpriseAppContext.Users">
            <summary>
            Gets or sets the users.
            </summary>
            <value>The users.</value>
        </member>
        <member name="P:DataMapper.AuctionEnterpriseAppContext.Scores">
            <summary>
            Gets or sets the scores.
            </summary>
            <value>The scores.</value>
        </member>
        <member name="P:DataMapper.AuctionEnterpriseAppContext.AuctionPlacingRestrictions">
            <summary>
            Gets or sets the auction placing restrictions.
            </summary>
            <value>The auction placing restrictions.</value>
        </member>
        <member name="M:DataMapper.AuctionEnterpriseAppContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Override this method to further configure the model that was discovered by convention from the entity types
            exposed in <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties on your derived context. The resulting model may be cached
            and re-used for subsequent instances of your derived context.
            </summary>
            <param name="modelBuilder">The builder being used to construct the model for this context. Databases (and other extensions) typically
            define extension methods on this object that allow you to configure aspects of the model that are specific
            to a given database.</param>
            <remarks>If a model is explicitly set on the options for this context (via <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseModel(Microsoft.EntityFrameworkCore.Metadata.IModel)" />)
            then this method will not be run.</remarks>
        </member>
        <member name="T:DataMapper.AuctionEnterpriseContextFactory">
            <summary>
            Factory class that creates EF contexts.
            </summary>
        </member>
        <member name="M:DataMapper.AuctionEnterpriseContextFactory.CreateDbContext(System.String[])">
            <summary>
            Creates a db context based on the arguments.
            </summary>
            <param name="args">Aditional arguments used for creating the context.</param>
            <returns>An EF context.</returns>
        </member>
        <member name="T:DataMapper.DAO.ApplicationSettingDataService">
            <summary>
            Provides data access functionality for <see cref="T:DomainModel.Models.ApplicationSetting"/>.
            </summary>
        </member>
        <member name="M:DataMapper.DAO.ApplicationSettingDataService.GetByName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:DataMapper.DAO.AuctionDataService">
            <summary>
            Provides data access functionality for <see cref="T:DomainModel.Models.Auction"/>.
            </summary>
        </member>
        <member name="M:DataMapper.DAO.AuctionDataService.GetAuctionsByUserId(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:DataMapper.DAO.AuctionPlacingRestrictionsDataService">
            <summary>
            Implementation of the auction placing data service.
            </summary>
        </member>
        <member name="M:DataMapper.DAO.AuctionPlacingRestrictionsDataService.HasActiveAuctionPlacingRestrictions(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:DataMapper.DAO.BidDataService">
            <summary>
            Provides data access functionality for <see cref="T:DomainModel.Models.Category"/>.
            </summary>
        </member>
        <member name="M:DataMapper.DAO.BidDataService.GetBidsByAuction(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:DataMapper.DAO.BidDataService.GetLatestBidByAuction(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="T:DataMapper.DAO.CategoryDataService">
            <summary>
            Provides data access functionality for <see cref="T:DomainModel.Models.Category"/>.
            </summary>
        </member>
        <member name="M:DataMapper.DAO.CategoryDataService.GetByID(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:DataMapper.DAO.CategoryDataService.Get(System.Linq.Expressions.Expression{System.Func{DomainModel.Models.Category,System.Boolean}},System.Func{System.Linq.IQueryable{DomainModel.Models.Category},System.Linq.IOrderedQueryable{DomainModel.Models.Category}},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DataMapper.DAO.CategoryDataService.GetNumberOfOpenedAuctionsByCategory(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:DataMapper.DAO.ProductDataService">
            <summary>
            Provides data access functionality for <see cref="T:DomainModel.Models.Product"/>.
            </summary>
        </member>
        <member name="M:DataMapper.DAO.ProductDataService.GetByID(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:DataMapper.DAO.ProductDataService.Get(System.Linq.Expressions.Expression{System.Func{DomainModel.Models.Product,System.Boolean}},System.Func{System.Linq.IQueryable{DomainModel.Models.Product},System.Linq.IOrderedQueryable{DomainModel.Models.Product}},System.String)">
            <inheritdoc/>
        </member>
        <member name="T:DataMapper.DAO.ScoreDataService">
            <summary>
            Implementation of the score data service.
            </summary>
        </member>
        <member name="M:DataMapper.DAO.ScoreDataService.CalculateUserScore(System.String,System.Double,System.Nullable{System.UInt32})">
            <inheritdoc/>
        </member>
        <member name="M:DataMapper.DAO.ScoreDataService.GetScoresAssignedToUser(System.String,System.Nullable{System.UInt32})">
            <inheritdoc/>
        </member>
        <member name="T:DataMapper.DAO.UserDataService">
            <summary>
            Provides data access functionality for <see cref="T:DomainModel.Models.User"/>.
            </summary>
        </member>
        <member name="M:DataMapper.DAO.UserDataService.Get(System.Linq.Expressions.Expression{System.Func{DomainModel.Models.User,System.Boolean}},System.Func{System.Linq.IQueryable{DomainModel.Models.User},System.Linq.IOrderedQueryable{DomainModel.Models.User}},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DataMapper.DAO.UserDataService.GetByID(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:DataMapper.Interfaces.IApplicationSettingDataService">
            <summary>
            Interface for the ApplicationSettingsDataService.
            </summary>
        </member>
        <member name="M:DataMapper.Interfaces.IApplicationSettingDataService.GetByName(System.String)">
            <summary>
            Gets an applicationSetting by its name.
            </summary>
            <param name="name">The name of the setting.</param>
            <returns>The corresponding application setting.</returns>
        </member>
        <member name="T:DataMapper.Interfaces.IAuctionDataService">
            <summary>
            Interface for the AuctionDataService.
            </summary>
        </member>
        <member name="M:DataMapper.Interfaces.IAuctionDataService.GetAuctionsByUserId(System.String)">
            <summary>
            Returns a list of auctions that the user has.
            </summary>
            <param name="userId">the user.</param>
            <returns>A list of auctions.</returns>
        </member>
        <member name="T:DataMapper.Interfaces.IAuctionPlacingRestrictionsDataService">
            <summary>
            Interface for the auctionPlacingRestrictionsDataService.
            </summary>
        </member>
        <member name="M:DataMapper.Interfaces.IAuctionPlacingRestrictionsDataService.HasActiveAuctionPlacingRestrictions(System.String)">
            <summary>
            Check if the user can start auctions or not.
            </summary>
            <param name="userId">The Id of the user to find out if it is unser restrictions.</param>
            <returns>A boolean representing if the user is under restrictions.</returns>
        </member>
        <member name="T:DataMapper.Interfaces.IBidDataService">
            <summary>
            Interface for the BidDataService.
            </summary>
        </member>
        <member name="M:DataMapper.Interfaces.IBidDataService.GetBidsByAuction(System.Int64)">
            <summary>
            Gets a list of bids that were placed on the auction.
            </summary>
            <param name="auctionId">The auction to search bids for.</param>
            <returns>The list of corresponding bids.</returns>
        </member>
        <member name="M:DataMapper.Interfaces.IBidDataService.GetLatestBidByAuction(System.Int64)">
            <summary>
            Gets the latest bid that was placed on the auction.
            </summary>
            <param name="auctionId">The auction to search bids for.</param>
            <returns>The latest bid or null.</returns>
        </member>
        <member name="T:DataMapper.Interfaces.ICategoryDataService">
            <summary>
            Interface for the CategoryDataService.
            </summary>
        </member>
        <member name="M:DataMapper.Interfaces.ICategoryDataService.GetNumberOfOpenedAuctionsByCategory(System.String)">
            <summary>
            Gets the number of opened auctions by category.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns>A dictionary with key being the category and the value being the number of opened auctions.</returns>
        </member>
        <member name="T:DataMapper.Interfaces.IProductDataService">
            <summary>
            Interface for the ProductDataService.
            </summary>
        </member>
        <member name="T:DataMapper.Interfaces.IScoreDataService">
            <summary>
            Interface for the scoreDataService.
            </summary>
        </member>
        <member name="M:DataMapper.Interfaces.IScoreDataService.GetScoresAssignedToUser(System.String,System.Nullable{System.UInt32})">
            <summary>
            Calculates the score of the user or returns the default value.
            </summary>
            <param name="userId">The Id uf the user to get the score of.</param>
            <param name="limit">The max number to return or all if null.</param>
            <returns>The score of the user in descending order by date added.</returns>
        </member>
        <member name="M:DataMapper.Interfaces.IScoreDataService.CalculateUserScore(System.String,System.Double,System.Nullable{System.UInt32})">
            <summary>
            Calculates the score a user has.
            </summary>
            <param name="userId">The Id uf the user to get the score of.</param>
            <param name="defaultScore">If the user has not been assigned any score, this value will be returned.</param>
            <param name="limit">The max number to return or all if null.</param>
            <returns>The value of the score.</returns>
        </member>
        <member name="T:DataMapper.Interfaces.IUserDataService">
            <summary>
            Interface for the UserDataService.
            </summary>
        </member>
        <member name="T:DataMapper.Repository.BaseRepository`1">
            <summary>
            Provides basic data access functionality for entity.
            </summary>
            <typeparam name="T">The entity it offers data access for.</typeparam>
        </member>
        <member name="M:DataMapper.Repository.BaseRepository`1.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DataMapper.Repository.BaseRepository`1.Insert(`0)">
            <inheritdoc/>
        </member>
        <member name="M:DataMapper.Repository.BaseRepository`1.Update(`0)">
            <inheritdoc/>
        </member>
        <member name="M:DataMapper.Repository.BaseRepository`1.Delete(System.Object)">
            <summary>
            Deletes an record from the database based on its id.
            </summary>
            <param name="id">The id of teh record.</param>
        </member>
        <member name="M:DataMapper.Repository.BaseRepository`1.Delete(`0)">
            <inheritdoc/>
        </member>
        <member name="M:DataMapper.Repository.BaseRepository`1.GetByID(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:DataMapper.Repository.IRepository`1">
            <summary>
            Interface for a generic repository.
            </summary>
            <typeparam name="T">The domain model that the repository corresponds to.</typeparam>
        </member>
        <member name="M:DataMapper.Repository.IRepository`1.Insert(`0)">
            <summary>
            Inserts the entity into the database.
            </summary>
            <param name="entity">The entity to be inserted.</param>
        </member>
        <member name="M:DataMapper.Repository.IRepository`1.Update(`0)">
            <summary>
            Updates the entity in the database.
            </summary>
            <param name="item">The item to be updated.</param>
        </member>
        <member name="M:DataMapper.Repository.IRepository`1.Delete(`0)">
            <summary>
            Deletes the entity in the database.
            </summary>
            <param name="entity">The entity to be deleted.</param>
        </member>
        <member name="M:DataMapper.Repository.IRepository`1.GetByID(System.Object)">
            <summary>
            Gets an antyty by its Id.
            </summary>
            <param name="id">The Id of the entity.</param>
            <returns>The entity that has a matching ID.</returns>
        </member>
        <member name="M:DataMapper.Repository.IRepository`1.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String)">
            <summary>
            Gets the list of records from the database that match the criteria.
            </summary>
            <param name="filter">Expression to be used to filter the data.</param>
            <param name="orderBy">The property to order by.</param>
            <param name="includeProperties">The properties to be included, comma separated.</param>
            <returns>The list of objects that match the criteria.</returns>
        </member>
    </members>
</doc>
